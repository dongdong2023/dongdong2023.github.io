<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>python学习(1)</title>
    <link href="/2023/01/31/python%E5%AD%A6%E4%B9%A0-1/"/>
    <url>/2023/01/31/python%E5%AD%A6%E4%B9%A0-1/</url>
    
    <content type="html"><![CDATA[<h1 id="初识"><a href="#初识" class="headerlink" title="初识"></a>初识</h1><p> 说实话，我学习pyhon没坚持看完过一本书，或者一整套教学视频。总是看了一半或者更少就放弃了。一直觉得自己不够专业也不够完善。直到我看到一些名言警句。</p><ol><li>不要完美主义。</li><li>学习要冲着自己的目标去。</li><li>不要迷信权威的“好”教材。</li><li>实践！ </li></ol><p>其中最重要的就是 <strong>不要完美主义</strong> ，当然其他几句也很重要，对于码农来说！</p><p>所以我这里不在介绍python的语法，这个东西网上一大堆，且看了也记不住，不如自己实际使用的时候百度一下。</p><p>那我这里说些不一样的，但是很重要的，python原理。</p><h1 id="python原理"><a href="#python原理" class="headerlink" title="python原理"></a>python原理</h1><h2 id="运行原理"><a href="#运行原理" class="headerlink" title="运行原理"></a>运行原理</h2><p>Python解释器将源代码转换为字节码，然后把编译好的字节码转发到Python虚拟机（PVM）中进行执行。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/5b0e0a1da8ac8784c596dadc5c244afc.png" alt="image"></p><p>1.执行 python XX.py 后，将会启动 Python 的解释器<br>2.python解释器的编译器会将.py源文件编译（解释）成字节码生成PyCodeObject字节码对象存放在内存中。<br>3.python解释器的虚拟机将执行内存中的字节码对象转化为机器语言，虚拟机与操作系统交互，使机器语言在机器硬件上运行。<br>4.运行结束后python解释器则将PyCodeObject写回到pyc文件中。当python程序第二次运行时，首先程序会在硬盘中寻找pyc文件，如果找到，则直接载入，否则就重复上面的过程。</p><p><a href="https://blog.csdn.net/weixin_43422340/article/details/114316820">参考</a></p><p>但是为什么直接运行python程序没有看到.pyc文件，而导入模块就能看到生成的.pyc文件呢？</p><p>这里涉及到一个缓存机制，直接运行python程序其实也会生成.pyc文件，只是没有保存，python虚拟机将直接运行的程序视为长期运行的程序，不需要频繁调用，而导入模块，则视为会频繁调用；所以导入模块时，会生成.pyc文件，如此下次再导入该模块时，会先查看是否有.pyc文件，如果有，则直接导入.pyc文件；如果没有，则将模块转码成字节码文件pyc，后再导入字节码文件。这里会涉及到模块修改的问题，如果模块有修改，虚拟机会自动检测模块程序的修改时间，如果与修改则重新生成字节码文件。</p><p><a href="https://www.cnblogs.com/restran/p/4903056.html">参考</a> <strong>仔细阅读</strong></p><p>编译原理</p><p><img src="https://pic1.zhimg.com/80/v2-790b89a1e1214a5d6745879e648baf48_1440w.webp" alt="img"></p><p>说白了就是把源代码转为机器能识别的二进制就是编译器，python的主流的编译器就是Cpython，用c</p><p><a href="https://zhuanlan.zhihu.com/p/362072187">参考</a></p><p><a href="https://blog.csdn.net/weixin_43949535/article/details/118401648">编译原理</a></p><h2 id="一切皆是对象"><a href="#一切皆是对象" class="headerlink" title="一切皆是对象"></a>一切皆是对象</h2><h2 id="多线程和多进程"><a href="#多线程和多进程" class="headerlink" title="多线程和多进程"></a>多线程和多进程</h2><h2 id="垃圾回收机制"><a href="#垃圾回收机制" class="headerlink" title="垃圾回收机制"></a>垃圾回收机制</h2><p><a href="http://hbprotoss.github.io/post/pythonla-ji-hui-shou-ji-zhi/">参考</a></p><p>本来到这里就结束了，但是你懂的，查的资料越多越感觉自己要学的越多。挖坑2本书。</p><ol><li>&lt;&lt;自制编程语言&gt;&gt;</li></ol><p>（<a href="https://blog.csdn.net/qq_59848320/article/details/123649160%EF%BC%89">https://blog.csdn.net/qq_59848320/article/details/123649160）</a></p><p>（<a href="https://www.cnblogs.com/antispam/p/4015116.html%EF%BC%89">https://www.cnblogs.com/antispam/p/4015116.html）</a></p><p>（如何学习编译原理？ - 腾讯技术工程的回答 - 知乎 <a href="https://www.zhihu.com/question/21515496/answer/1689704074%EF%BC%89">https://www.zhihu.com/question/21515496/answer/1689704074）</a></p><ol start="2"><li>&lt;&lt;python源码剖析&gt;&gt;</li></ol><p>（<a href="https://zhuanlan.zhihu.com/p/358690339%EF%BC%89">https://zhuanlan.zhihu.com/p/358690339）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>出发点</title>
    <link href="/2023/01/31/%E5%87%BA%E5%8F%91%E7%82%B9/"/>
    <url>/2023/01/31/%E5%87%BA%E5%8F%91%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h1><p>  一直想做点什么，抛开赚钱和兴趣。总要做点什么，单单是为了实现自我价值。</p><p> 自我价值这个东西，每个人的看法也不同。自从我看了知乎的一个关于西方哲学史的梳理，就只记住一句话。<strong>哲学死了！</strong></p><pre><code class="hljs"> 不知道这句话是否正确，但是正确与否也是相对的。所以我就不纠结了。在我的观点里它就是正确的。</code></pre><p>​     [起源](西方哲学史看不懂怎么办？ - 喵喵老花猫的回答 - 知乎 <a href="https://www.zhihu.com/question/29582502/answer/106155395">https://www.zhihu.com/question/29582502/answer/106155395</a>)</p><p>​    但是共鸣最深的是萨特的存在主义</p><p>​    [提升](萨特的存在主义是什么？ - 宏桑的回答 - 知乎 <a href="https://www.zhihu.com/question/20987389/answer/1925529699">https://www.zhihu.com/question/20987389/answer/1925529699</a>)</p><h1 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h1><p>​    既然想做点什么，那么肯定要根据自身的能力来考究。</p><p>回顾我的一生，我的时间段大致分为5个部分。</p><ol><li>大学之前（书本知识）– 老师</li><li>大学（游戏） –直播</li><li>培训班（java web） –java 开发</li><li>研究生（深度学习入门，游戏）–调参侠</li><li>工作（深度学习入门，机器学习入门，机器视觉入门) –无</li></ol><p>其中，只有第五个的知识是需要梳理和记录的。</p><p>根据我的能力，我可选择的职业和赚钱的机会少的可怜。但是现实生活的我有房贷，上有4个老人需要赡养，下有1一个1岁半的孩子和一个孕妇。是的，我这么无用的人还在继续生孩子。简直是作死。</p><h1 id="下一步"><a href="#下一步" class="headerlink" title="下一步"></a>下一步</h1><p>​    根据我在外企工作5年经验（划水），其中因为深度学习被抬到风口浪尖，所以工资还算可以，但是这种如履薄冰的感觉，一直让我心力憔悴。每次下定决心不在划水，但是上班是真的没事做。公司就是把你当成储备人员养着，因为大家都在弄深度学习，公司必须且不差钱。所以我是真的划水5年。</p><p>​    但是下定决心后，总会做点什么，所以5年来，不下20次的下定决心，也让我学了一点东西。我学习（收集信息）的方式主要有3</p><ol><li>公众号</li><li>CSDN</li><li>书籍</li><li>视频（基本上只看过第一集）</li><li>github</li></ol><p>这些方式，注定我的学习是碎片的且混乱。</p><p>所以当我打算做点什么的时候，那么把这些碎片整理起来就可以实现个人价值（暂时）。</p><h1 id="大纲（暂时）"><a href="#大纲（暂时）" class="headerlink" title="大纲（暂时）"></a>大纲（暂时）</h1><ol><li>python学习</li><li>线性代数</li><li>概率论</li><li>LeetCode</li><li>机器学习</li><li>机器视觉</li><li>深度学习</li><li>深度学习框架</li><li>编译优化</li></ol><p>其实到后面发现，还是c++牛逼，还是要学习底层原理。其他的都是表面的应用。很多知识其实不仅仅是理论还包括很多代码案例。</p><p>网上很多建议，学习深度学习，需要学习线性代数，学习python，学习概率论，学习机器视觉。但是我想说，直接学习效果最好，因为很难坚持。可能你看了一眼线性代数就放弃了。</p><p>但是我觉得编程既是一种技术也是一种能力，随着学习，我发现新技术层出不穷，学习是学不完的。所以我们应该学会的是怎么解决问题，比如另一种语言，另一种技术，我们怎么快速的上手并使用。从开发转架构师大概就是这个意思。。</p>]]></content>
    
    
    
    <tags>
      
      <tag>感想</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test_my_site</title>
    <link href="/2023/01/17/test-my-site/"/>
    <url>/2023/01/17/test-my-site/</url>
    
    <content type="html"><![CDATA[<h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p>111111<br>1<br>1</p><p>1<br>1<br>1<br>1</p>]]></content>
    
    
    <categories>
      
      <category>test</category>
      
    </categories>
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/16/hello-world/"/>
    <url>/2023/01/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
